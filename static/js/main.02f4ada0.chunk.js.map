{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","onBlur","NewMovie","props","onAdd","defaultFields","fields","setFields","count","setCount","handleChange","event","field","newValue","currentTarget","currentFields","isDisabled","Object","entries","reduce","acc","some","trim","length","onClick","preventDefault","currentCounter","disabled","App","moviesFromServer","setMovies","newMovie","oldMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02f4ada0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = (props) => {\n  const {\n    onAdd,\n  } = props;\n\n  const defaultFields: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [fields, setFields] = useState(defaultFields);\n  const [count, setCount] = useState(0);\n\n  const increaseCount = () => {\n    setCount((currentCounter) => currentCounter + 1);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    field: keyof Movie,\n  ) => {\n    const newValue = event.currentTarget.value;\n\n    setFields(currentFields => ({\n      ...currentFields,\n      [field]: newValue,\n    }));\n  };\n\n  const handleAddingMovie = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    setFields(defaultFields);\n\n    onAdd(fields);\n\n    increaseCount();\n  };\n\n  const isDisabled = Object.entries(fields)\n    .reduce((acc: string[], field) => {\n      if (field[0] !== 'description') {\n        return [...acc, field[1]];\n      }\n\n      return acc;\n    }, [])\n    .some(field => field.trim().length === 0);\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbId,\n    imdbUrl,\n  } = fields;\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => handleChange(event, 'title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(event) => handleChange(event, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => handleChange(event, 'imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => handleChange(event, 'imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => handleChange(event, 'imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleAddingMovie}\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(oldMovies => ([\n      ...oldMovies,\n      newMovie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}